version: 2.1

parameters:
  node-version:
    type: string
    default: '20.10.0'
  jdk8-update:
    type: string
    default: '401'
  maven-version:
    type: string
    default: '3.9.6'

commands:
  install_deps:
    description: Install dependencies
    steps:
      - run:
          name: pnpm install
          command: pnpm i --frozen-lockfile
  checkout_submodules:
    description: Checkout git submodules
    steps:
      - run:
          name: checkout submodules
          command: |
            git submodule init
            git submodule update
orbs:
  win: circleci/windows@5.0

jobs:
  build-windows:
    executor: win/default
    steps:
      - checkout
      - checkout_submodules
      - run:
          name: Install WiX
          command: |
            curl.exe -sSLo wix.exe https://github.com/wixtoolset/wix3/releases/download/wix3141rtm/wix314.exe
            .\wix.exe /install /quiet /norestart
          shell: powershell.exe
      - run:
          name: Install Node.js
          command: |
            nvm install << pipeline.parameters.node-version >>
            nvm use << pipeline.parameters.node-version >>
      - run:
          name: Install pnpm
          command: corepack enable
      - run:
          name: Check Node.js/pnpm installs
          command: |
            node -v
            pnpm -v
      - install_deps
      - run:
          name: Install Java
          command: |
            JDK8_UPDATE=<< pipeline.parameters.jdk8-update >>
            curl "https://s3.us-west-2.amazonaws.com/public.breakout.jedwards1211/jdk-8u${JDK8_UPDATE}-windows-x64.zip" > jdk-x64.zip
            mkdir jdk-x64
            (cd jdk-x64; unzip ../jdk-x64.zip)
          shell: bash.exe
      - run:
          name: Install Maven
          command: |
            MAVEN_VERSION=<< pipeline.parameters.maven-version >>
            curl "https://s3.us-west-2.amazonaws.com/public.breakout.jedwards1211/apache-maven-${MAVEN_VERSION}-bin.tar.gz" > maven.tar.gz
            tar -xzvf maven.tar.gz
            mkdir ~/.m2
            cp mvn-settings.xml ~/.m2/settings.xml
          shell: bash.exe
      - run:
          name: Check Java/Maven installs
          command: |
            export JAVA_HOME="$PWD/jdk-x64"
            export MVN_HOME="$PWD/apache-maven-<< pipeline.parameters.maven-version >>"
            export PATH="$JAVA_HOME/bin:$MVN_HOME/bin:/c/Program Files (x86)/WiX Toolset v3.14/bin:$PATH"
            java -version
            javapackager -version
            mvn -v
          shell: bash.exe
      - run:
          name: Get release version
          command: pnpm semantic-release --dry-run
          shell: bash.exe
      - run:
          name: Build
          command: |
            export JAVA_HOME="$PWD/jdk-x64"
            export MVN_HOME="$PWD/apache-maven-<< pipeline.parameters.maven-version >>"
            export PATH="$JAVA_HOME/bin:$MVN_HOME/bin:/c/Program Files (x86)/WiX Toolset v3.14/bin:$PATH"
            mvn clean install -U -Dbreakout.version="$(< version)" -P windows,windows-amd64
            mkdir -p dist/windows
            cp breakout/target/breakout-0.0.0-SNAPSHOT.jar dist/windows/breakout.jar
          shell: bash.exe
      - run:
          name: Package x64
          command: |
            export JAVA_HOME="$PWD/jdk-x64"
            export MVN_HOME="$PWD/apache-maven-<< pipeline.parameters.maven-version >>"
            export PATH="$JAVA_HOME/bin:$MVN_HOME/bin:/c/Program Files (x86)/WiX Toolset v3.14/bin:$PATH"
            javapackager -deploy -native msi -outdir packages -outfile Breakout \
              -srcdir dist/windows -srcfiles breakout.jar \
              -appclass org.breakout.Breakout -name Breakout -title "Breakout Cave Survey" \
              -BappVersion=$(< version) -Bicon=breakout.ico
            cp packages/bundles/Breakout-$(cat version | xargs).msi dist/windows/Breakout-x64.msi
          shell: bash.exe
      - store_artifacts:
          path: dist/windows
      - persist_to_workspace:
          root: .
          paths:
            - dist/windows

  build-macos:
    macos:
      xcode: 15.3.0
    steps:
      - checkout
      - checkout_submodules
      - run:
          name: Install Node.js
          command: |
            NODE_VERSION=<< pipeline.parameters.node-version >>
            curl "https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}.pkg" > "$HOME/Downloads/node-v${NODE_VERSION}.pkg"
            sudo installer -store -pkg "$HOME/Downloads/node-v${NODE_VERSION}.pkg" -target /
      - run:
          name: Install pnpm
          command: corepack enable
      - run:
          name: Check Node.js/pnpm installs
          command: |
            node -v
            pnpm -v
      - install_deps
      - run:
          name: Install Java
          command: |
            JDK8_UPDATE=<< pipeline.parameters.jdk8-update >>
            curl "https://s3.us-west-2.amazonaws.com/public.breakout.jedwards1211/jdk-8u${JDK8_UPDATE}-macosx-x64.dmg" > "$HOME/Downloads/jdk-8u${JDK8_UPDATE}-macosx-x64.dmg"
            hdiutil attach "$HOME/Downloads/jdk-8u${JDK8_UPDATE}-macosx-x64.dmg"
            sudo installer -pkg "/Volumes/JDK 8 Update ${JDK8_UPDATE}/JDK 8 Update ${JDK8_UPDATE}.pkg" -target /
            diskutil umount "/Volumes/JDK 8 Update ${JDK8_UPDATE}"
      - run:
          name: Setup Environment Variables
          command: |
            JDK8_UPDATE=<< pipeline.parameters.jdk8-update >>
            echo "export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk-1.8.jdk/Contents/Home" >> $BASH_ENV
            echo "export PATH=\$JAVA_HOME/bin:\$PATH" >> $BASH_ENV
      - run:
          name: Install Maven
          command: |
            MAVEN_VERSION=<< pipeline.parameters.maven-version >>
            curl "https://s3.us-west-2.amazonaws.com/public.breakout.jedwards1211/apache-maven-${MAVEN_VERSION}-bin.tar.gz" > "$HOME/Downloads/apache-maven-${MAVEN_VERSION}-bin.tar.gz"
            tar xzvf "$HOME/Downloads/apache-maven-${MAVEN_VERSION}-bin.tar.gz"
            echo "export PATH=apache-maven-${MAVEN_VERSION}/bin:\$PATH" >> $BASH_ENV
            mkdir ~/.m2
            cp mvn-settings.xml ~/.m2/settings.xml
      - run:
          name: Check Java/Maven installs
          command: |
            java -version
            javapackager -version
            mvn -v
      - run:
          name: Get release version
          command: pnpm semantic-release --dry-run
      - run:
          name: Build
          command: |
            mvn clean install -U -Dbreakout.version="$(< version)"
            mkdir -p dist/macos
            cp breakout/target/breakout-0.0.0-SNAPSHOT.jar dist/macos/breakout.jar
            mvn clean install -U -Dbreakout.version="$(< version)" -P osx,windows,windows-amd64,linux,linux-amd64
            cp breakout/target/breakout-0.0.0-SNAPSHOT.jar dist/macos/breakout-all-platforms.jar
      - run:
          name: Package
          command: |
            javapackager -deploy -native image -outdir packages -outfile Breakout \
              -srcdir dist/macos -srcfiles breakout.jar \
              -appclass org.breakout.Breakout -name Breakout -title "Breakout Cave Survey" \
              -BappVersion=$(< version) -Bicon=breakout.icns
            hdiutil create temp.dmg -ov -volname "Breakout" -fs HFS+ -srcfolder packages/bundles
            hdiutil convert temp.dmg -format UDZO -o dist/macos/Breakout.dmg
      - store_artifacts:
          path: dist/macos
      - persist_to_workspace:
          root: .
          paths:
            - dist/macos

  release:
    docker:
      - image: cimg/node:<< pipeline.parameters.node-version >>
    steps:
      - checkout
      - run:
          name: Install pnpm
          command: corepack enable
      - install_deps
      - attach_workspace:
          at: .
      - run:
          name: Release
          command: pnpm semantic-release

workflows:
  version: 2
  build-release:
    jobs:
      - build-windows
      - build-macos
      - release:
          requires:
            - build-windows
            - build-macos
          filters:
            branches:
              only:
                - master
                - next
